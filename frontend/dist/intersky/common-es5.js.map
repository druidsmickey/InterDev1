{"version":3,"sources":["src/app/common.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,QAAa,aAAb;AAOE,6BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AALZ,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,SAAA,CAAJ,CAAY;AAAE,0BAAgB,kBAAlB;AAAsC,qBAAW;AAAjD,SAAZ,CAAV;AACA,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,gBAAA,CAAJ,CAAmB;AAAE,UAAA,OAAO,EAAE,KAAK;AAAhB,SAAnB,CAAV;AAER,aAAA,GAAA,GAAM,2BAAN;AAEwC;;AAP1C;AAAA;AAAA,oCASW;AACP;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,GAAtB,iBAAP;AACD;AAZH;AAAA;AAAA,mCAcU;AACN;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,GAAtB,gBAAP;AACD;AAjBH;AAAA;AAAA,uCAmBc;AACV;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,GAAtB,qBAAP;AACD;AAtBH;AAAA;AAAA,uCAwBc;AACV;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,GAAtB,oBAAP;AACD;AA3BH;AAAA;AAAA,iCA6BW,KA7BX,EA6BgB;AACZ;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,qBAA4C,KAA5C,CAAP,CAFY,CAGZ;AACD;AAjCH;AAAA;AAAA,qCAmCe,QAnCf,EAmCuB;AACnB;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,yBAAgD,QAAhD,CAAP;AACD;AAtCH;AAAA;AAAA,oCAwCW;AACP,iBAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,GAAtB,kBAAP;AACD;AA1CH;AAAA;AAAA,8BA4CQ,IA5CR,EA4CY;AACR;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,kBAAyC,IAAzC,CAAP;AACD;AA/CH;AAAA;AAAA,iCAiDW,IAjDX,EAiDe;AACX;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,qBAA4C,IAA5C,CAAP;AACD;AApDH;;AAAA;AAAA,OAAA;;;;cAO4B,iDAAA,CAAA,YAAA;;;;AAPf,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJzB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAIyB,CAAA,EAAb,aAAa,CAAb","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  private headers = new Headers({ 'Content-Type': 'application/json', 'charset': 'UTF-8' });\r\n  private options = new RequestOptions({ headers: this.headers });\r\n\r\n  uri = 'http://localhost:8080/api';\r\n\r\n \tconstructor(private http: HttpClient) {}\r\n\r\n  getBrands() {\r\n    // console.log('common.service getBrands');\r\n    return this.http.get(`${this.uri}/data/brand`);\r\n  }\r\n\r\n  getCCTVs() {\r\n    // console.log('common.service getCCTVs');\r\n    return this.http.get(`${this.uri}/data/cctv`);\r\n  }\r\n\r\n  getAccessory() {\r\n    // console.log('common.service getAccessory');\r\n    return this.http.get(`${this.uri}/data/accessory`);\r\n  }\r\n\r\n  getRecorders() {\r\n    // console.log('common.service getRecorders');\r\n    return this.http.get(`${this.uri}/data/recorder`);\r\n  }\r\n\r\n  addCCTVs(cctvs) {\r\n    // console.log('common.service addCCTV', cctvs);\r\n    return this.http.post(`${this.uri}/data/addcctvs`, cctvs);\r\n    // return this.http.post(`${this.uri}/addcctvs`, JSON.stringify(cctvs), this.options);\r\n  }\r\n\r\n  addRecorders(recoders) {\r\n    // console.log('common.service addRecorders', recoders);\r\n    return this.http.post(`${this.uri}/data/addrecorders`, recoders);\r\n  }\r\n\r\n  getImages() {\r\n    return this.http.get(`${this.uri}/data/images`);\r\n  }\r\n\r\n  login(auth) {\r\n    // console.log('common.service login', auth);\r\n    return this.http.post(`${this.uri}/auth/login`, auth);\r\n  }\r\n\r\n  register(auth) {\r\n    // console.log('common.service register', auth);\r\n    return this.http.post(`${this.uri}/auth/register`, auth);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}