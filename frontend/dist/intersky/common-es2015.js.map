{"version":3,"sources":["./src/app/common.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACmB;AACZ;AAOlD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAOxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL5B,YAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;QAClF,YAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAEhE,QAAG,GAAG,2BAA2B,CAAC;IAEK,CAAC;IAExC,SAAS;QACP,2CAA2C;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,0CAA0C;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,YAAY;QACV,8CAA8C;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC;IACrD,CAAC;IAED,YAAY;QACV,8CAA8C;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,gDAAgD;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAC1D,sFAAsF;IACxF,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,wDAAwD;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,oBAAoB,EAAE,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,IAAI;QACR,6CAA6C;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,gDAAgD;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;CACF;;YA9C2B,+DAAU;;AAPzB,aAAa;IAJzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAEW,aAAa,CAqDzB;AArDyB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  private headers = new Headers({ 'Content-Type': 'application/json', 'charset': 'UTF-8' });\r\n  private options = new RequestOptions({ headers: this.headers });\r\n\r\n  uri = 'http://localhost:8080/api';\r\n\r\n \tconstructor(private http: HttpClient) {}\r\n\r\n  getBrands() {\r\n    // console.log('common.service getBrands');\r\n    return this.http.get(`${this.uri}/data/brand`);\r\n  }\r\n\r\n  getCCTVs() {\r\n    // console.log('common.service getCCTVs');\r\n    return this.http.get(`${this.uri}/data/cctv`);\r\n  }\r\n\r\n  getAccessory() {\r\n    // console.log('common.service getAccessory');\r\n    return this.http.get(`${this.uri}/data/accessory`);\r\n  }\r\n\r\n  getRecorders() {\r\n    // console.log('common.service getRecorders');\r\n    return this.http.get(`${this.uri}/data/recorder`);\r\n  }\r\n\r\n  addCCTVs(cctvs) {\r\n    // console.log('common.service addCCTV', cctvs);\r\n    return this.http.post(`${this.uri}/data/addcctvs`, cctvs);\r\n    // return this.http.post(`${this.uri}/addcctvs`, JSON.stringify(cctvs), this.options);\r\n  }\r\n\r\n  addRecorders(recoders) {\r\n    // console.log('common.service addRecorders', recoders);\r\n    return this.http.post(`${this.uri}/data/addrecorders`, recoders);\r\n  }\r\n\r\n  getImages() {\r\n    return this.http.get(`${this.uri}/data/images`);\r\n  }\r\n\r\n  login(auth) {\r\n    // console.log('common.service login', auth);\r\n    return this.http.post(`${this.uri}/auth/login`, auth);\r\n  }\r\n\r\n  register(auth) {\r\n    // console.log('common.service register', auth);\r\n    return this.http.post(`${this.uri}/auth/register`, auth);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}